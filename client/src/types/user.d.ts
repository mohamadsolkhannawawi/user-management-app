// src/types/user.d.ts

// This file defines the TypeScript types and interfaces used throughout the client application
// for user-related data. This ensures type safety and consistency.

// Define the User type. This interface should ideally match the structure of the User model
// returned by the backend API to ensure data consistency between frontend and backend.
export type User = {
    id: number; // Unique identifier for the user.
    nama: string; // User's full name.
    email: string; // User's email address, must be unique.
    nomorTelepon: string; // User's phone number.
    departemen: string; // The department the user belongs to.
    statusAktif: boolean; // Indicates if the user account is active.
    createdAt: string; // Timestamp of when the user record was created.
    updatedAt: string; // Timestamp of the last update to the user record.
};

// Define UserFormData type for user creation or update operations.
// It omits 'id', 'createdAt', and 'updatedAt' as these fields are typically
// generated by the backend and not provided by the frontend during form submission.
export type UserFormData = Omit<User, 'id' | 'createdAt' | 'updatedAt'>;

// Define UserEditData type for editable fields.
// In this application, it's currently the same as UserFormData, meaning all
// fields except 'id', 'createdAt', and 'updatedAt' are editable.
export type UserEditData = UserFormData;
